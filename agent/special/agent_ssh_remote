#!/bin/bash
# -*- coding: UTF8 -*-

# Parse cmd line option
while getopts "H:K:U:" CURRENT_OPTION; do
    case "${CURRENT_OPTION}" in
    H)
        HOST_IP=${OPTARG} ;;
    K)
        SSH_KEYS=${OPTARG} ;;
    U)
        SSH_USER=${OPTARG} ;;
    h|*)
        util.help.print
        exit 1 ;;
    esac
done
shift $((${OPTIND} -1));

# Cmk Remote Agent
CMK_SHARE_DIR=/usr/share/check_mk
CMK_AGENT_DIR=${CMK_SHARE_DIR}/agents

# SSH options to disable host-key checking
SSH_OPTS="-o StrictHostKeyChecking=no"

# Grabs the agent itself and all the valid plugins and puts them in a tempfile
TEMP_FILE=$(mktemp)

# As of now, we support only linux-based appliances and shell script plugins!

# Minify the agent + relevant shell-script plugins
cat ${CMK_AGENT_DIR}/special/check_mk_agent.linux.appliance \
    ${CMK_AGENT_DIR}/plugins/netstat.linux.appliance \
    ${CMK_AGENT_DIR}/plugins/nfsexports.linux.appliance \
    ${CMK_AGENT_DIR}/plugins/mk_inventory.linux.appliance \
    ${CMK_AGENT_DIR}/plugins/mk_postgres.linux.appliance \
    > ${TEMP_FILE}

# Execute remotely the minified script. That's all.
ssh ${SSH_OPTS} -i ${SSH_KEYS} ${SSH_USER}@${HOST_IP} 'bash -s 2>/dev/null' -- < ${TEMP_FILE}

# Remove the temporary file
rm -f ${TEMP_FILE}

# This is necessary because otherwise CheckMK will report an error and not
# the agent output
exit 0